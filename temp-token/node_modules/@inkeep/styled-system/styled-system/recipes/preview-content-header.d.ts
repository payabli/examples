/* eslint-disable */
import type { ConditionalValue } from '../types/index';
import type { DistributiveOmit, Pretty } from '../types/system-types';

interface PreviewContentHeaderVariant {
  variant: "title" | "hitContentPreview"
}

type PreviewContentHeaderVariantMap = {
  [key in keyof PreviewContentHeaderVariant]: Array<PreviewContentHeaderVariant[key]>
}

export type PreviewContentHeaderVariantProps = {
  [key in keyof PreviewContentHeaderVariant]?: ConditionalValue<PreviewContentHeaderVariant[key]> | undefined
}

export interface PreviewContentHeaderRecipe {
  __type: PreviewContentHeaderVariantProps
  (props?: PreviewContentHeaderVariantProps): string
  raw: (props?: PreviewContentHeaderVariantProps) => PreviewContentHeaderVariantProps
  variantMap: PreviewContentHeaderVariantMap
  variantKeys: Array<keyof PreviewContentHeaderVariant>
  splitVariantProps<Props extends PreviewContentHeaderVariantProps>(props: Props): [PreviewContentHeaderVariantProps, Pretty<DistributiveOmit<Props, keyof PreviewContentHeaderVariantProps>>]
}


export declare const previewContentHeader: PreviewContentHeaderRecipe