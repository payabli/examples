/* eslint-disable */
import type { ConditionalValue } from '../types/index';
import type { DistributiveOmit, Pretty } from '../types/system-types';

interface AiChatPageWrapperVariant {
  size: "expand" | "default" | "shrink-vertically" | "full-viewport"
variant: "no-shadow" | "container-with-shadow"
}

type AiChatPageWrapperVariantMap = {
  [key in keyof AiChatPageWrapperVariant]: Array<AiChatPageWrapperVariant[key]>
}

export type AiChatPageWrapperVariantProps = {
  [key in keyof AiChatPageWrapperVariant]?: ConditionalValue<AiChatPageWrapperVariant[key]> | undefined
}

export interface AiChatPageWrapperRecipe {
  __type: AiChatPageWrapperVariantProps
  (props?: AiChatPageWrapperVariantProps): string
  raw: (props?: AiChatPageWrapperVariantProps) => AiChatPageWrapperVariantProps
  variantMap: AiChatPageWrapperVariantMap
  variantKeys: Array<keyof AiChatPageWrapperVariant>
  splitVariantProps<Props extends AiChatPageWrapperVariantProps>(props: Props): [AiChatPageWrapperVariantProps, Pretty<DistributiveOmit<Props, keyof AiChatPageWrapperVariantProps>>]
}


export declare const aiChatPageWrapper: AiChatPageWrapperRecipe