import { splitProps, getSlotCompoundVariant } from '../helpers.mjs';
import { createRecipe } from './create-recipe.mjs';

const modalDefaultVariants = {
  "size": "md",
  "scrollOverflowBehavior": "outside",
  "isCentered": true
}
const modalCompoundVariants = []

const modalSlotNames = [
  [
    "trigger",
    "modal__trigger"
  ],
  [
    "backdrop",
    "modal__backdrop"
  ],
  [
    "container",
    "modal__container"
  ],
  [
    "content",
    "modal__content"
  ],
  [
    "title",
    "modal__title"
  ],
  [
    "description",
    "modal__description"
  ],
  [
    "closeTrigger",
    "modal__closeTrigger"
  ],
  [
    "root",
    "modal__root"
  ],
  [
    "footer",
    "modal__footer"
  ],
  [
    "trigger",
    "modal__trigger"
  ],
  [
    "backdrop",
    "modal__backdrop"
  ],
  [
    "container",
    "modal__container"
  ],
  [
    "content",
    "modal__content"
  ],
  [
    "title",
    "modal__title"
  ],
  [
    "description",
    "modal__description"
  ],
  [
    "closeTrigger",
    "modal__closeTrigger"
  ],
  [
    "root",
    "modal__root"
  ],
  [
    "footer",
    "modal__footer"
  ]
]
const modalSlotFns = /* @__PURE__ */ modalSlotNames.map(([slotName, slotKey]) => [slotName, createRecipe(slotKey, modalDefaultVariants, getSlotCompoundVariant(modalCompoundVariants, slotName))])

const modalFn = (props = {}) => {
  return Object.fromEntries(modalSlotFns.map(([slotName, slotFn]) => [slotName, slotFn(props)]))
}

const modalVariantKeys = [
  "size",
  "scrollOverflowBehavior",
  "isCentered",
  "variant"
]

export const modal = /* @__PURE__ */ Object.assign(modalFn, {
  __recipe__: false,
  __name__: 'modal',
  raw: (props) => props,
  variantKeys: modalVariantKeys,
  variantMap: {
  "size": [
    "xs",
    "sm",
    "md",
    "lg",
    "xl",
    "2xl",
    "3xl",
    "4xl",
    "5xl",
    "6xl",
    "full"
  ],
  "scrollOverflowBehavior": [
    "inside",
    "outside"
  ],
  "isCentered": [
    "false",
    "true"
  ],
  "variant": [
    "clickThrough"
  ]
},
  splitVariantProps(props) {
    return splitProps(props, modalVariantKeys)
  },
})