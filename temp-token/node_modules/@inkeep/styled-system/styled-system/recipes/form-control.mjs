import { splitProps, getSlotCompoundVariant } from '../helpers.mjs';
import { createRecipe } from './create-recipe.mjs';

const formControlDefaultVariants = {}
const formControlCompoundVariants = []

const formControlSlotNames = [
  [
    "container",
    "form-control__container"
  ],
  [
    "required-indicator",
    "form-control__required-indicator"
  ],
  [
    "helper",
    "form-control__helper"
  ],
  [
    "label",
    "form-control__label"
  ],
  [
    "error",
    "form-control__error"
  ],
  [
    "error-icon",
    "form-control__error-icon"
  ]
]
const formControlSlotFns = /* @__PURE__ */ formControlSlotNames.map(([slotName, slotKey]) => [slotName, createRecipe(slotKey, formControlDefaultVariants, getSlotCompoundVariant(formControlCompoundVariants, slotName))])

const formControlFn = (props = {}) => {
  return Object.fromEntries(formControlSlotFns.map(([slotName, slotFn]) => [slotName, slotFn(props)]))
}

const formControlVariantKeys = []

export const formControl = /* @__PURE__ */ Object.assign(formControlFn, {
  __recipe__: false,
  __name__: 'formControl',
  raw: (props) => props,
  variantKeys: formControlVariantKeys,
  variantMap: {},
  splitVariantProps(props) {
    return splitProps(props, formControlVariantKeys)
  },
})