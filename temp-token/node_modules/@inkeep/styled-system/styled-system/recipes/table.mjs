import { splitProps, getSlotCompoundVariant } from '../helpers.mjs';
import { createRecipe } from './create-recipe.mjs';

const tableDefaultVariants = {
  "variant": "simple",
  "size": "md"
}
const tableCompoundVariants = []

const tableSlotNames = [
  [
    "container",
    "table__container"
  ],
  [
    "table",
    "table__table"
  ],
  [
    "caption",
    "table__caption"
  ],
  [
    "tbody",
    "table__tbody"
  ],
  [
    "td",
    "table__td"
  ],
  [
    "tfoot",
    "table__tfoot"
  ],
  [
    "th",
    "table__th"
  ],
  [
    "thead",
    "table__thead"
  ],
  [
    "tr",
    "table__tr"
  ]
]
const tableSlotFns = /* @__PURE__ */ tableSlotNames.map(([slotName, slotKey]) => [slotName, createRecipe(slotKey, tableDefaultVariants, getSlotCompoundVariant(tableCompoundVariants, slotName))])

const tableFn = (props = {}) => {
  return Object.fromEntries(tableSlotFns.map(([slotName, slotFn]) => [slotName, slotFn(props)]))
}

const tableVariantKeys = [
  "variant",
  "size"
]

export const table = /* @__PURE__ */ Object.assign(tableFn, {
  __recipe__: false,
  __name__: 'table',
  raw: (props) => props,
  variantKeys: tableVariantKeys,
  variantMap: {
  "variant": [
    "simple",
    "tfoot",
    "striped",
    "unstyled"
  ],
  "size": [
    "sm",
    "md",
    "lg"
  ]
},
  splitVariantProps(props) {
    return splitProps(props, tableVariantKeys)
  },
})