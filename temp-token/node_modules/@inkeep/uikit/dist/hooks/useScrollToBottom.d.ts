/// <reference types="react" />
type ContainerRefType = React.MutableRefObject<HTMLDivElement | null>;
interface UseScrollToBottomParams {
    containerRef: ContainerRefType;
    debounceTime?: number;
}
export interface DebouncedScrollToBottomParams {
    shouldScrollSmoothly?: boolean;
    bypassDebounce?: boolean;
    bypassUserScrollUpLock?: boolean;
}
export declare const isSafari: () => boolean;
export declare const useScrollToBottom: ({ containerRef, debounceTime, }: UseScrollToBottomParams) => {
    scrollToBottomEl: import("react").MutableRefObject<HTMLDivElement | null>;
    scrollToBottom: ({ shouldScrollSmoothly, bypassDebounce, bypassUserScrollUpLock, }: DebouncedScrollToBottomParams) => void;
    userScrolledUp: boolean;
    setUserScrolledUp: import("react").Dispatch<import("react").SetStateAction<boolean>>;
};
export {};
