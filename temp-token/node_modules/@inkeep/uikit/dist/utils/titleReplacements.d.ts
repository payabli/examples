import { StringReplacementRule } from './processStringReplacement';
/**
 * Generates replacement rules for a given organization's display name.
 *
 * This function generates rules that match the organization's display name either at the start or end of a string,
 * followed by a special character (pipe, hyphen, or colon). Space insensitive to the special character. It also accounts for a possible suffix after the display
 * name starting with a period, to catch domain names. E.g. inkeep.com. It is case insensitive.
 * If a match is found, it is replaced with an empty string. These rules are particularly
 * useful for cleaning up strings such as titles.
 *
 * @param organizationDisplayName - The display name of the organization.
 * @returns An array of StringReplacementRule objects, each containing a matching rule and replacement value.
 *
 * @example
 * // Given the organizationDisplayName 'inkeep', it would match and replace:
 * '| Inkeep' -> ''
 * 'inkeep: ' -> ''
 * '| inkeep.ai' -> ''
 * 'inkeep.ts |' -> ''
 */
export declare function generateTitleReplacementRules(organizationDisplayName?: string): StringReplacementRule[];
interface ProcessTitleArgs {
    title?: string | null;
    stringReplacementRules: StringReplacementRule[];
}
export declare function processTitle({ title, stringReplacementRules, }: ProcessTitleArgs): string | null | undefined;
export {};
