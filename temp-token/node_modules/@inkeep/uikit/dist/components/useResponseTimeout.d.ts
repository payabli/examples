import { SearchAndChatAttributeFilters } from './InkeepWidgetProps';
interface SubscribeToNewMessageInputVariables {
    messageInput: string;
    organizationId: string;
    chatMode: string;
    filters?: SearchAndChatAttributeFilters;
}
interface SubscribeToContinuedChatInputVariables {
    messageInput: string;
    sessionId: string;
}
declare class ResponseTimeoutError extends Error {
    variables: SubscribeToContinuedChatInputVariables | SubscribeToNewMessageInputVariables;
    constructor(message: string, variables: SubscribeToContinuedChatInputVariables | SubscribeToNewMessageInputVariables);
}
declare class ResponseTruncatedError extends Error {
    variables: SubscribeToContinuedChatInputVariables | SubscribeToNewMessageInputVariables;
    constructor(message: string, variables: SubscribeToContinuedChatInputVariables | SubscribeToNewMessageInputVariables);
}
interface UseResponseTimeoutProps {
    messages: {
        content: string;
    }[];
    handleTimeout: () => void;
    handleMessageTimeout: () => void;
}
export declare function useResponseTimeout({ messages, handleTimeout, handleMessageTimeout, }: UseResponseTimeoutProps): void;
export { ResponseTimeoutError, ResponseTruncatedError };
