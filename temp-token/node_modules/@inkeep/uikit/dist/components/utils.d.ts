import React from 'react';
declare const joinReactComponents: (components: JSX.Element[], seperator: JSX.Element) => JSX.Element[] | null;
/**
 * Finds all occurrences of a substring in a given string and returns their indexes.
 * @param {string} str - The input string to search within.
 * @param {string} sub - The substring to search for.
 * @returns {number[]} - An array of indexes where the substring is found.
 */
declare const findIndexes: (str: string, sub: string) => number[];
interface ParseStrWithHighlightProps {
    str: string | null | undefined;
}
declare const ParseStrWithHighlight: React.FC<ParseStrWithHighlightProps>;
export declare function cleanStringFromIncompleteBrackets(input: string, disableCleaningOfInlineLinks?: boolean): string;
export declare function debounce<T extends (...args: any[]) => any>(func: T, wait: number): (...args: Parameters<T>) => void;
export declare function customScrollTo(target: HTMLElement, duration?: number): void;
export { findIndexes, joinReactComponents, ParseStrWithHighlight };
