import { FormConfig } from '../../Form/types';
import { Workflow } from '../../Workflows/InkeepWorkflowTypes';
import type { MessageArray } from './AIChatPage';
import { AIAnnotations } from './SubscribeToNewMessageForNewChat';
interface ChatHistoryProps {
    messages: MessageArray;
    loading: boolean;
    isListeningForResponse?: boolean;
    setShowFeedbackModal?: (ind: number) => void;
    setShowResponseEditor?: (ind: number) => void;
    submitPositiveFeedback?: (messageInd: number) => void;
    isResponseTruncated?: boolean;
    isMdContainer?: boolean;
    chatSessionId: string;
    handleAutoSubmitNewMessage: (message: string) => void;
    aiAnnotations: AIAnnotations;
    handleWorkflowSelection: (workflow: Workflow) => void;
    getFeedback: (messageId: string) => number;
    openForm?: (form: FormConfig) => void;
    onModalClose?: () => void;
}
declare const Messages: ({ messages, loading, isListeningForResponse, setShowFeedbackModal, setShowResponseEditor, submitPositiveFeedback, isResponseTruncated, isMdContainer, chatSessionId, handleAutoSubmitNewMessage, aiAnnotations, handleWorkflowSelection, getFeedback, openForm, onModalClose, }: ChatHistoryProps) => import("react/jsx-runtime").JSX.Element;
export default Messages;
