import { type Feedback } from '../../../../hooks/useMessageFeedback';
import { MessageArray } from '../AIChatPage';
interface AdminChatMessageFeedback {
    risky_action: boolean;
    risky_action_description: string;
    poor_perception: boolean;
    poor_perception_description: string;
    poor_perception_reason: PoorPerceptionReason;
    poor_perception_reason_other_description: string;
}
interface ChatMessageFeedback {
    unrelated_response: boolean;
    unrelated_response_description: string;
    inaccurate_statement: boolean;
    inaccurate_statement_description: string;
    inaccurate_code_snippet: boolean;
    inaccurate_code_snippet_description: string;
    irrelevant_citations: boolean;
}
type PoorPerceptionReason = 'HIGHLIGHTED_UNRELATED_ISSUES' | 'OTHER' | 'SUGGESTED_A_COMPETITOR';
type ThumbsDownFeedback = ChatMessageFeedback & Partial<AdminChatMessageFeedback>;
type FeedbackFromForm = ThumbsDownFeedback;
export type { FeedbackFromForm };
export interface ChatMessageFeedbackFormProps {
    isOpen: boolean;
    onClose: () => void;
    messages: MessageArray;
    messageInd: number;
    chatSessionId: string;
    workflowId?: string;
    setMessageFeedback: (messageId: string, feedback: Feedback) => void;
}
declare const ChatMessageFeedbackForm: (props: ChatMessageFeedbackFormProps) => import("react/jsx-runtime").JSX.Element;
export default ChatMessageFeedbackForm;
