// src/index.ts
var PandaError = class extends Error {
  code;
  hint;
  constructor(code, message, opts) {
    super(message);
    this.code = `ERR_PANDA_${code}`;
    this.hint = opts?.hint;
  }
};
var TokenError = class extends PandaError {
  constructor(message) {
    super("INVALID_TOKEN", message);
  }
};
var ConfigNotFoundError = class extends PandaError {
  constructor() {
    const message = `Cannot find config file: panda.config.ts or panda.config.js/cjs/mjs/mts/cts. Did you forget to run \`panda init\`?`;
    super("NO_CONFIG", message);
  }
};
var ConfigError = class extends PandaError {
  constructor(message) {
    super("CONFIG_ERROR", message);
  }
};
var NotFoundError = class extends PandaError {
  constructor({ name, type }) {
    super("NOT_FOUND", `${type} not found: \`${name}\``);
  }
};
var ConditionError = class extends PandaError {
  constructor(message) {
    super("CONDITION", message);
  }
};
export {
  ConditionError,
  ConfigError,
  ConfigNotFoundError,
  NotFoundError,
  PandaError,
  TokenError
};
