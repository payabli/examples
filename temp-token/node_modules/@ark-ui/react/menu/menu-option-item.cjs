'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
require('@zag-js/menu');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const menuContext = require('./menu-context.cjs');

const MenuOptionItem = react.forwardRef((props, ref) => {
  const api = menuContext.useMenuContext();
  const [optionProps, { children, ...divProps }] = createSplitProps.createSplitProps()(props, [
    "id",
    "disabled",
    "valueText",
    "closeOnSelect",
    "name",
    "type",
    "value",
    "onCheckedChange"
  ]);
  const view = runIfFn.runIfFn(children, { isActive: api?.isOptionChecked(optionProps) ?? false });
  const mergedProps = react$1.mergeProps(api?.getOptionItemProps(optionProps) ?? {}, divProps);
  return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view });
});
MenuOptionItem.displayName = "MenuOptionItem";

exports.MenuOptionItem = MenuOptionItem;
