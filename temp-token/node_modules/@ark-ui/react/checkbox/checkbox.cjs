'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const checkboxContext = require('./checkbox-context.cjs');
const useCheckbox = require('./use-checkbox.cjs');

const Checkbox = react.forwardRef((props, ref) => {
  const [useCheckboxProps, { children, ...labelProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "checked",
      "defaultChecked",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "name",
      "onChange",
      "required",
      "value"
    ]
  );
  const api = useCheckbox.useCheckbox(useCheckboxProps);
  const mergedProps = react$1.mergeProps(api.rootProps, labelProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsxs(checkboxContext.CheckboxProvider, { value: api, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.label, { ...mergedProps, ref, children: view }),
    /* @__PURE__ */ jsxRuntime.jsx("input", { ...api.hiddenInputProps })
  ] });
});
Checkbox.displayName = "Checkbox";

exports.Checkbox = Checkbox;
