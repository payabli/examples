import React, { type ComponentPropsWithoutRef } from 'react';
type JsxElements = {
    [E in keyof JSX.IntrinsicElements]: ArkForwardRefComponent<E>;
};
type ArkForwardRefComponent<E extends React.ElementType> = React.ForwardRefExoticComponent<ArkPropsWithRef<E>>;
type ArkPropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {
    asChild?: boolean;
};
export type HTMLArkProps<T extends keyof JSX.IntrinsicElements> = ComponentPropsWithoutRef<T> & {
    asChild?: boolean;
};
export declare const jsxFactory: () => JsxElements;
export declare const ark: JsxElements;
export {};
