import { TabPresenceProps } from './tab-presence';
import { ContentProps, TriggerProps } from '@zag-js/tabs';
import { UseTabsProps } from './use-tabs';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, RefAttributes, DetailedHTMLProps, HTMLAttributes } from 'react';
/// <reference types="react" />
import { TabContent, type TabContentProps } from './tab-content';
import { TabIndicator, type TabIndicatorProps } from './tab-indicator';
import { TabList, type TabListProps } from './tab-list';
import { TabTrigger, type TabTriggerProps } from './tab-trigger';
import { type TabsProps } from './tabs';
import { useTabsContext, type TabsContext } from './tabs-context';
import { tabsAnatomy } from './tabs.anatomy';
declare const Tabs: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseTabsProps> & UseTabsProps & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseTabsProps> & UseTabsProps & RefAttributes<HTMLDivElement>>;
    Content: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & ContentProps & Omit<TabPresenceProps, "children"> & RefAttributes<HTMLDivElement>>;
    Indicator: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    List: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Trigger: ForwardRefExoticComponent<Omit<HTMLArkProps<"button">, keyof TriggerProps> & TriggerProps & RefAttributes<HTMLButtonElement>>;
};
export { TabContent, TabIndicator, TabList, TabTrigger, Tabs, tabsAnatomy, useTabsContext };
export type { TabContentProps, TabIndicatorProps, TabListProps, TabTriggerProps, TabsContext, TabsProps, };
