import { EllipsisProps, PageTriggerProps } from '@zag-js/pagination';
import { UsePaginationProps, UsePaginationReturn } from './use-pagination';
import { HTMLArkProps } from '..';
import { Assign } from '../types';
import { ForwardRefExoticComponent, ReactNode, RefAttributes, DetailedHTMLProps, HTMLAttributes, LiHTMLAttributes, ButtonHTMLAttributes } from 'react';
/// <reference types="react" />
import { type PaginationProps } from './pagination';
import { usePaginationContext, type PaginationContext } from './pagination-context';
import { PaginationEllipsis, type PaginationEllipsisProps } from './pagination-ellipsis';
import { PaginationList, type PaginationListProps } from './pagination-list';
import { PaginationListItem, type PaginationListItemProps } from './pagination-list-item';
import { PaginationNextPageTrigger, type PaginationNextPageTriggerProps } from './pagination-next-page-trigger';
import { PaginationPageTrigger, type PaginationPageTriggerProps } from './pagination-page-trigger';
import { PaginationPrevPageTrigger, type PaginationPrevPageTriggerProps } from './pagination-prev-page-trigger';
import { paginationAnatomy } from './pagination.anatomy';
declare const Pagination: ForwardRefExoticComponent<Omit<Assign<HTMLArkProps<"nav">, UsePaginationProps>, "children"> & {
    children?: ReactNode | ((pages: UsePaginationReturn) => ReactNode);
} & RefAttributes<HTMLElement>> & {
    Root: ForwardRefExoticComponent<Omit<Assign<HTMLArkProps<"nav">, UsePaginationProps>, "children"> & {
        children?: ReactNode | ((pages: UsePaginationReturn) => ReactNode);
    } & RefAttributes<HTMLElement>>;
    Ellipsis: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "index"> & EllipsisProps & RefAttributes<HTMLDivElement>>;
    List: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLUListElement>, HTMLUListElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLUListElement>>;
    ListItem: ForwardRefExoticComponent<Omit<DetailedHTMLProps<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLLIElement>>;
    NextPageTrigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
    PageTrigger: ForwardRefExoticComponent<Omit<HTMLArkProps<"button">, keyof PageTriggerProps> & PageTriggerProps & RefAttributes<HTMLButtonElement>>;
    PrevPageTrigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
};
export { Pagination, PaginationEllipsis, PaginationList, PaginationListItem, PaginationNextPageTrigger, PaginationPageTrigger, PaginationPrevPageTrigger, paginationAnatomy, usePaginationContext, };
export type { PaginationContext, PaginationEllipsisProps, PaginationListItemProps, PaginationListProps, PaginationNextPageTriggerProps, PaginationPageTriggerProps, PaginationPrevPageTriggerProps, PaginationProps, };
