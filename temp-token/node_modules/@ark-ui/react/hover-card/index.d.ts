import { HTMLArkProps, PresenceProps } from '..';
import { ForwardRefExoticComponent, DetailedHTMLProps, HTMLAttributes, RefAttributes, ButtonHTMLAttributes } from 'react';
import { JSX } from 'react/jsx-runtime';
/// <reference types="react" />
import { type HoverCardProps } from './hover-card';
import { HoverCardArrow, type HoverCardArrowProps } from './hover-card-arrow';
import { HoverCardArrowTip, type HoverCardArrowTipProps } from './hover-card-arrow-tip';
import { HoverCardContent, type HoverCardContentProps } from './hover-card-content';
import { useHoverCardContext } from './hover-card-context';
import { HoverCardPositioner, type HoverCardPositionerProps } from './hover-card-positioner';
import { HoverCardTrigger, type HoverCardTriggerProps } from './hover-card-trigger';
import { hoverCardAnatomy } from './hover-card.anatomy';
declare const HoverCard: ((props: HoverCardProps) => JSX.Element) & {
    Root: (props: HoverCardProps) => JSX.Element;
    Arrow: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    ArrowTip: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Content: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "present" | "onExitComplete" | "lazyMount" | "unmountOnExit"> & Omit<PresenceProps, "children"> & RefAttributes<HTMLDivElement>>;
    Positioner: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Trigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
};
export { HoverCard, HoverCardArrow, HoverCardArrowTip, HoverCardContent, HoverCardPositioner, HoverCardTrigger, hoverCardAnatomy, useHoverCardContext, };
export type { HoverCardArrowProps, HoverCardArrowTipProps, HoverCardContentProps, HoverCardPositionerProps, HoverCardProps, HoverCardTriggerProps, };
