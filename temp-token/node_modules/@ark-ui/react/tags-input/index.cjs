'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const tag = require('./tag.cjs');
const tagDeleteTrigger = require('./tag-delete-trigger.cjs');
const tagInput = require('./tag-input.cjs');
const tagsInput$1 = require('./tags-input.cjs');
const tagsInputClearTrigger = require('./tags-input-clear-trigger.cjs');
const tagsInputContext = require('./tags-input-context.cjs');
const tagsInputControl = require('./tags-input-control.cjs');
const tagsInputField = require('./tags-input-field.cjs');
const tagsInputLabel = require('./tags-input-label.cjs');
const tagsInput = require('@zag-js/tags-input');

const TagsInput = Object.assign(tagsInput$1.TagsInput, {
  Root: tagsInput$1.TagsInput,
  ClearTrigger: tagsInputClearTrigger.TagsInputClearTrigger,
  Control: tagsInputControl.TagsInputControl,
  Input: tagsInputField.TagsInputInput,
  Label: tagsInputLabel.TagsInputLabel,
  Tag: tag.Tag,
  TagInput: tagInput.TagInput,
  TagDeleteTrigger: tagDeleteTrigger.TagDeleteTrigger
});

exports.Tag = tag.Tag;
exports.TagDeleteTrigger = tagDeleteTrigger.TagDeleteTrigger;
exports.TagInput = tagInput.TagInput;
exports.TagsInputClearTrigger = tagsInputClearTrigger.TagsInputClearTrigger;
exports.useTagsInputContext = tagsInputContext.useTagsInputContext;
exports.TagsInputControl = tagsInputControl.TagsInputControl;
exports.TagsInputInput = tagsInputField.TagsInputInput;
exports.TagsInputLabel = tagsInputLabel.TagsInputLabel;
Object.defineProperty(exports, 'tagsInputAnatomy', {
  enumerable: true,
  get: () => tagsInput.anatomy
});
exports.TagsInput = TagsInput;
