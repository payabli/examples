import { UsePinInputProps } from './use-pin-input';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, RefAttributes, DetailedHTMLProps, HTMLAttributes, LabelHTMLAttributes } from 'react';
/// <reference types="react" />
import { type PinInputProps } from './pin-input';
import { usePinInputContext, type PinInputContext } from './pin-input-context';
import { PinInputControl, type PinInputControlProps } from './pin-input-control';
import { PinInputInput, type PinInputInputProps } from './pin-input-field';
import { PinInputLabel, type PinInputLabelProps } from './pin-input-label';
import { pinInputAnatomy } from './pin-input.anatomy';
declare const PinInput: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UsePinInputProps> & UsePinInputProps & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UsePinInputProps> & UsePinInputProps & RefAttributes<HTMLDivElement>>;
    Control: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Input: ForwardRefExoticComponent<Omit<HTMLArkProps<"input">, "index"> & {
        index: number;
    } & RefAttributes<HTMLInputElement>>;
    Label: ForwardRefExoticComponent<Omit<DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLLabelElement>>;
};
export { PinInput, PinInputControl, PinInputInput, PinInputLabel, pinInputAnatomy, usePinInputContext, };
export type { PinInputContext, PinInputControlProps, PinInputInputProps, PinInputLabelProps, PinInputProps, };
