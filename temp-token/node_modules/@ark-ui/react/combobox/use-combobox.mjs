'use client';
import * as combobox from '@zag-js/combobox';
import { useMachine, normalizeProps } from '@zag-js/react';
import { useId } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import '../environment/index.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const useCombobox = (props) => {
  const getRootNode = useEnvironmentContext();
  const [collectionOptions, rest] = createSplitProps()(props, [
    "isItemDisabled",
    "itemToValue",
    "itemToString",
    "items"
  ]);
  const collection = combobox.collection(collectionOptions);
  const initialContext = {
    id: useId(),
    getRootNode,
    collection,
    ...rest,
    value: props.defaultValue
  };
  const context = {
    ...initialContext,
    collection,
    value: props.value
  };
  const [state, send] = useMachine(combobox.machine(initialContext), {
    context
  });
  return combobox.connect(state, send, normalizeProps);
};

export { useCombobox };
