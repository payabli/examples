'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { ark } from '../factory.mjs';
import { Presence } from '../presence/index.mjs';
import { useAccordionContext } from './accordion-context.mjs';
import { useAccordionItemContext } from './accordion-item-context.mjs';
import { splitPresenceProps } from '../presence/split-presence-props.mjs';

const AccordionContent = forwardRef(
  function AccordionContent2(props, ref) {
    const [presenceProps, localProps] = splitPresenceProps(props);
    const api = useAccordionItemContext();
    return /* @__PURE__ */ jsx(Presence, { present: api.isOpen, ...presenceProps, children: /* @__PURE__ */ jsx(AccordionInnerContent, { ref, ...localProps }) });
  }
);
const AccordionInnerContent = forwardRef(
  function AccordionInnerContent2(props, ref) {
    const api = useAccordionContext();
    const accordionItem = useAccordionItemContext();
    const mergedProps = mergeProps(api.getContentProps(accordionItem), props);
    return /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref });
  }
);

export { AccordionContent };
