'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const factory = require('../factory.cjs');
const index = require('../presence/index.cjs');
const accordionContext = require('./accordion-context.cjs');
const accordionItemContext = require('./accordion-item-context.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');

const AccordionContent = react.forwardRef(
  function AccordionContent2(props, ref) {
    const [presenceProps, localProps] = splitPresenceProps.splitPresenceProps(props);
    const api = accordionItemContext.useAccordionItemContext();
    return /* @__PURE__ */ jsxRuntime.jsx(index.Presence, { present: api.isOpen, ...presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(AccordionInnerContent, { ref, ...localProps }) });
  }
);
const AccordionInnerContent = react.forwardRef(
  function AccordionInnerContent2(props, ref) {
    const api = accordionContext.useAccordionContext();
    const accordionItem = accordionItemContext.useAccordionItemContext();
    const mergedProps = react$1.mergeProps(api.getContentProps(accordionItem), props);
    return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref });
  }
);

exports.AccordionContent = AccordionContent;
