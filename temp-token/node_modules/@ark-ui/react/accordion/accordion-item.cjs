'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const accordionContext = require('./accordion-context.cjs');
const accordionItemContext = require('./accordion-item-context.cjs');

const AccordionItem = react.forwardRef((props, ref) => {
  const [itemProps, { children, ...rest }] = createSplitProps.createSplitProps()(props, [
    "value",
    "disabled"
  ]);
  const { getItemProps, getItemState } = accordionContext.useAccordionContext();
  const itemState = getItemState(itemProps);
  const mergedProps = react$1.mergeProps(getItemProps(itemProps), rest);
  const view = runIfFn.runIfFn(children, itemState);
  return /* @__PURE__ */ jsxRuntime.jsx(accordionItemContext.AccordionItemProvider, { value: { ...itemProps, ...itemState }, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});
AccordionItem.displayName = "AccordionItem";

exports.AccordionItem = AccordionItem;
