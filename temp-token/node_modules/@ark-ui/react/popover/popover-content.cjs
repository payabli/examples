'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const factory = require('../factory.cjs');
const index = require('../presence/index.cjs');
const popoverContext = require('./popover-context.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');

const PopoverContent = react.forwardRef((props, ref) => {
  const [presenceProps, localProps] = splitPresenceProps.splitPresenceProps(props);
  const api = popoverContext.usePopoverContext();
  return /* @__PURE__ */ jsxRuntime.jsx(index.Presence, { present: api.isOpen, ...presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(PopoverInnerContent, { ref, ...localProps }) });
});
PopoverContent.displayName = "PopoverContent";
const PopoverInnerContent = react.forwardRef(
  function PopoverInnerContent2(props, ref) {
    const api = popoverContext.usePopoverContext();
    const mergedProps = react$1.mergeProps(api.contentProps, props);
    return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref });
  }
);

exports.PopoverContent = PopoverContent;
