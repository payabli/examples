'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const sliderContext = require('./slider-context.cjs');
const useSlider = require('./use-slider.cjs');

const Slider = react.forwardRef((props, ref) => {
  const { children, ...restProps } = props;
  const [useSliderProps, divProps] = createSplitProps.createSplitProps()(restProps, [
    "aria-label",
    "aria-labelledby",
    "defaultValue",
    "dir",
    "disabled",
    "focusThumbOnChange",
    "form",
    "getAriaValueText",
    "getRootNode",
    "id",
    "ids",
    "invalid",
    "max",
    "min",
    "name",
    "onChange",
    "onChangeEnd",
    "onChangeStart",
    "orientation",
    "origin",
    "readOnly",
    "step",
    "thumbAlignment",
    "thumbAlignment",
    "thumbSize",
    "value"
  ]);
  const api = useSlider.useSlider(useSliderProps);
  const mergedProps = react$1.mergeProps(api.rootProps, divProps);
  const view = runIfFn.runIfFn(children, api);
  return /* @__PURE__ */ jsxRuntime.jsxs(sliderContext.SliderProvider, { value: api, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }),
    /* @__PURE__ */ jsxRuntime.jsx("input", { ...api.hiddenInputProps })
  ] });
});
Slider.displayName = "Slider";

exports.Slider = Slider;
