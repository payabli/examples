'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { SliderProvider } from './slider-context.mjs';
import { useSlider } from './use-slider.mjs';

const Slider = forwardRef((props, ref) => {
  const { children, ...restProps } = props;
  const [useSliderProps, divProps] = createSplitProps()(restProps, [
    "aria-label",
    "aria-labelledby",
    "defaultValue",
    "dir",
    "disabled",
    "focusThumbOnChange",
    "form",
    "getAriaValueText",
    "getRootNode",
    "id",
    "ids",
    "invalid",
    "max",
    "min",
    "name",
    "onChange",
    "onChangeEnd",
    "onChangeStart",
    "orientation",
    "origin",
    "readOnly",
    "step",
    "thumbAlignment",
    "thumbAlignment",
    "thumbSize",
    "value"
  ]);
  const api = useSlider(useSliderProps);
  const mergedProps = mergeProps(api.rootProps, divProps);
  const view = runIfFn(children, api);
  return /* @__PURE__ */ jsxs(SliderProvider, { value: api, children: [
    /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }),
    /* @__PURE__ */ jsx("input", { ...api.hiddenInputProps })
  ] });
});
Slider.displayName = "Slider";

export { Slider };
