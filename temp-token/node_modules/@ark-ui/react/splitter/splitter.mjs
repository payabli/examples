'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { SplitterProvider } from './splitter-context.mjs';
import { useSplitter } from './use-splitter.mjs';

const Splitter = forwardRef((props, ref) => {
  const [useSplitterProps, { children, ...divProps }] = createSplitProps()(
    props,
    [
      "defaultSize",
      "dir",
      "getRootNode",
      "id",
      "ids",
      "onResize",
      "onResizeEnd",
      "onResizeStart",
      "orientation",
      "size"
    ]
  );
  const splitter = useSplitter(useSplitterProps);
  const mergedProps = mergeProps(splitter.rootProps, divProps);
  const view = runIfFn(children, splitter);
  return /* @__PURE__ */ jsx(SplitterProvider, { value: splitter, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});
Splitter.displayName = "Splitter";

export { Splitter };
