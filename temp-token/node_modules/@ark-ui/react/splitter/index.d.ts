import { PanelProps, ResizeTriggerProps } from '@zag-js/splitter';
import { UseSplitterProps, UseSplitterReturn } from './use-splitter';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, ReactNode, RefAttributes } from 'react';
/// <reference types="react" />
import { type SplitterProps } from './splitter';
import { useSplitterContext, type SplitterContext } from './splitter-context';
import { SplitterPanel, type SplitterPanelProps } from './splitter-panel';
import { SplitterResizeTrigger, type SplitterResizeTriggerProps } from './splitter-resize-trigger';
import { splitterAnatomy } from './splitter.anatomy';
declare const Splitter: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "children" | keyof UseSplitterProps> & UseSplitterProps & {
    children?: ReactNode | ((state: UseSplitterReturn) => ReactNode);
} & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "children" | keyof UseSplitterProps> & UseSplitterProps & {
        children?: ReactNode | ((state: UseSplitterReturn) => ReactNode);
    } & RefAttributes<HTMLDivElement>>;
    Panel: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof PanelProps> & PanelProps & RefAttributes<HTMLDivElement>>;
    ResizeTrigger: ForwardRefExoticComponent<Omit<HTMLArkProps<"button">, keyof ResizeTriggerProps> & ResizeTriggerProps & RefAttributes<HTMLButtonElement>>;
};
export { Splitter, SplitterPanel, SplitterResizeTrigger, splitterAnatomy, useSplitterContext };
export type { SplitterContext, SplitterPanelProps, SplitterProps, SplitterResizeTriggerProps };
