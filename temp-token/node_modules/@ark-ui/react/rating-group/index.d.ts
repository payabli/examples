import { ItemProps, ItemState } from '@zag-js/rating-group';
import { UseRatingGroupProps, UseRatingGroupReturn } from './use-rating-group';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, RefAttributes, ReactNode, DetailedHTMLProps, LabelHTMLAttributes } from 'react';
/// <reference types="react" />
import { Rating, type RatingProps } from './rating';
import { useRatingContext } from './rating-context';
import { type RatingGroupProps } from './rating-group';
import { useRatingGroupContext } from './rating-group-context';
import { RatingGroupControl, type RatingGroupControlProps } from './rating-group-control';
import { RatingGroupLabel, type RatingGroupLabelProps } from './rating-group-label';
import { ratingGroupAnatomy } from './rating-group.anatomy';
declare const RatingGroup: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseRatingGroupProps> & UseRatingGroupProps & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseRatingGroupProps> & UseRatingGroupProps & RefAttributes<HTMLDivElement>>;
    Control: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "children"> & {
        children?: ReactNode | ((context: UseRatingGroupReturn) => ReactNode);
    } & RefAttributes<HTMLDivElement>>;
    Label: ForwardRefExoticComponent<Omit<DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLLabelElement>>;
    Rating: ForwardRefExoticComponent<Omit<HTMLArkProps<"span">, "children" | "index"> & ItemProps & {
        children: (state: ItemState) => ReactNode;
    } & RefAttributes<HTMLSpanElement>>;
};
export { Rating, RatingGroup, RatingGroupControl, RatingGroupLabel, ratingGroupAnatomy, useRatingContext, useRatingGroupContext, };
export type { RatingGroupControlProps, RatingGroupLabelProps, RatingGroupProps, RatingProps };
