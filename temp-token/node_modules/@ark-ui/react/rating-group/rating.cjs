'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const ratingContext = require('./rating-context.cjs');
const ratingGroupContext = require('./rating-group-context.cjs');

const Rating = react.forwardRef((props, ref) => {
  const { children, index, ...divProps } = props;
  const { getRatingState, getRatingProps } = ratingGroupContext.useRatingGroupContext();
  const ratingState = getRatingState({ index });
  const mergedProps = react$1.mergeProps(getRatingProps({ index }), divProps);
  const view = runIfFn.runIfFn(children, ratingState);
  return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.span, { ...mergedProps, ref, children: /* @__PURE__ */ jsxRuntime.jsx(ratingContext.RatingProvider, { value: ratingState, children: view }) });
});
Rating.displayName = "Rating";

exports.Rating = Rating;
