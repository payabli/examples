'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const ratingGroupContext = require('./rating-group-context.cjs');
const useRatingGroup = require('./use-rating-group.cjs');

const RatingGroup = react.forwardRef((props, ref) => {
  const [useRatingProps, inputProps] = createSplitProps.createSplitProps()(props, [
    "allowHalf",
    "autoFocus",
    "defaultValue",
    "dir",
    "disabled",
    "form",
    "getRootNode",
    "id",
    "ids",
    "max",
    "name",
    "onChange",
    "onHover",
    "readOnly",
    "translations",
    "value"
  ]);
  const api = useRatingGroup.useRatingGroup(useRatingProps);
  const mergedProps = react$1.mergeProps(api.rootProps, inputProps);
  return /* @__PURE__ */ jsxRuntime.jsxs(ratingGroupContext.RatingGroupProvider, { value: api, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref }),
    /* @__PURE__ */ jsxRuntime.jsx("input", { ...api.hiddenInputProps })
  ] });
});
RatingGroup.displayName = "RatingGroup";

exports.RatingGroup = RatingGroup;
