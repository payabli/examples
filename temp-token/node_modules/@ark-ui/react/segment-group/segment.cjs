'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const segmentContext = require('./segment-context.cjs');
const segmentGroupContext = require('./segment-group-context.cjs');
const segmentGroup_anatomy = require('./segment-group.anatomy.cjs');

const Segment = react.forwardRef((props, ref) => {
  const [segmentProps, localProps] = createSplitProps.createSplitProps()(props, [
    "value",
    "disabled",
    "invalid"
  ]);
  const api = segmentGroupContext.useSegmentGroupContext();
  const mergedProps = react$1.mergeProps(api.getRadioProps(segmentProps), localProps);
  return /* @__PURE__ */ jsxRuntime.jsxs(segmentContext.SegmentProvider, { value: segmentProps, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.label, { ...mergedProps, ...segmentGroup_anatomy.parts.radio.attrs, ref }),
    /* @__PURE__ */ jsxRuntime.jsx("input", { ...api.getRadioHiddenInputProps(segmentProps) })
  ] });
});
Segment.displayName = "Segment";

exports.Segment = Segment;
