import { RadioProps } from '@zag-js/radio-group';
import { UseSegmentGroupProps } from './use-segment-group';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, RefAttributes, DetailedHTMLProps, LabelHTMLAttributes, HTMLAttributes } from 'react';
/// <reference types="react" />
import { Segment, type SegmentProps } from './segment';
import { useSegmentContext, type SegmentContext } from './segment-context';
import { SegmentControl, type SegmentControlProps } from './segment-control';
import { type SegmentGroupProps } from './segment-group';
import { useSegmentGroupContext, type SegmentGroupContext } from './segment-group-context';
import { SegmentGroupIndicator, type SegmentGroupIndicatorProps } from './segment-group-indicator';
import { SegmentGroupLabel, type SegmentGroupLabelProps } from './segment-group-label';
import { segmentGroupAnatomy } from './segment-group.anatomy';
import { SegmentLabel, type SegmentLabelProps } from './segment-label';
declare const SegmentGroup: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseSegmentGroupProps> & UseSegmentGroupProps & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, keyof UseSegmentGroupProps> & UseSegmentGroupProps & RefAttributes<HTMLDivElement>>;
    Label: ForwardRefExoticComponent<Omit<DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLLabelElement>>;
    Indicator: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Segment: ForwardRefExoticComponent<Omit<HTMLArkProps<"label">, keyof RadioProps> & RadioProps & RefAttributes<HTMLLabelElement>>;
    SegmentLabel: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLSpanElement>>;
    SegmentControl: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
};
export { Segment, SegmentControl, SegmentGroup, SegmentGroupIndicator, SegmentGroupLabel, SegmentLabel, segmentGroupAnatomy, useSegmentContext, useSegmentGroupContext, };
export type { SegmentContext, SegmentControlProps, SegmentGroupContext, SegmentGroupIndicatorProps, SegmentGroupLabelProps, SegmentGroupProps, SegmentLabelProps, SegmentProps, };
