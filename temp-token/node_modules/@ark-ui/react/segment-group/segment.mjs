'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { SegmentProvider } from './segment-context.mjs';
import { useSegmentGroupContext } from './segment-group-context.mjs';
import { parts } from './segment-group.anatomy.mjs';

const Segment = forwardRef((props, ref) => {
  const [segmentProps, localProps] = createSplitProps()(props, [
    "value",
    "disabled",
    "invalid"
  ]);
  const api = useSegmentGroupContext();
  const mergedProps = mergeProps(api.getRadioProps(segmentProps), localProps);
  return /* @__PURE__ */ jsxs(SegmentProvider, { value: segmentProps, children: [
    /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ...parts.radio.attrs, ref }),
    /* @__PURE__ */ jsx("input", { ...api.getRadioHiddenInputProps(segmentProps) })
  ] });
});
Segment.displayName = "Segment";

export { Segment };
