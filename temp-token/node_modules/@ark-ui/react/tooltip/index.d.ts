import { HTMLArkProps, PresenceProps } from '..';
import { ForwardRefExoticComponent, DetailedHTMLProps, HTMLAttributes, RefAttributes, ButtonHTMLAttributes } from 'react';
import { JSX } from 'react/jsx-runtime';
/// <reference types="react" />
import { type TooltipProps } from './tooltip';
import { TooltipArrow, type TooltipArrowProps } from './tooltip-arrow';
import { TooltipArrowTip, type TooltipArrowTipProps } from './tooltip-arrow-tip';
import { TooltipContent, type TooltipContentProps } from './tooltip-content';
import { useTooltipContext } from './tooltip-context';
import { TooltipPositioner, type TooltipPositionerProps } from './tooltip-positioner';
import { TooltipTrigger, type TooltipTriggerProps } from './tooltip-trigger';
import { tooltipAnatomy } from './tooltip.anatomy';
declare const Tooltip: ((props: TooltipProps) => JSX.Element) & {
    Root: (props: TooltipProps) => JSX.Element;
    Arrow: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    ArrowTip: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Content: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "present" | "onExitComplete" | "lazyMount" | "unmountOnExit"> & Omit<PresenceProps, "children"> & RefAttributes<HTMLDivElement>>;
    Positioner: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Trigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
};
export { Tooltip, TooltipArrow, TooltipArrowTip, TooltipContent, TooltipPositioner, TooltipTrigger, tooltipAnatomy, useTooltipContext, };
export type { TooltipArrowProps, TooltipArrowTipProps, TooltipContentProps, TooltipPositionerProps, TooltipProps, TooltipTriggerProps, };
