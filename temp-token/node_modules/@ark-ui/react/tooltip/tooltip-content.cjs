'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const factory = require('../factory.cjs');
const index = require('../presence/index.cjs');
const tooltipContext = require('./tooltip-context.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');

const TooltipContent = react.forwardRef((props, ref) => {
  const [presenceProps, tooltipContentProps] = splitPresenceProps.splitPresenceProps(props);
  const api = tooltipContext.useTooltipContext();
  return /* @__PURE__ */ jsxRuntime.jsx(index.Presence, { present: api.isOpen, ...presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(TooltipInnerContent, { ref, ...tooltipContentProps }) });
});
TooltipContent.displayName = "TooltipContent";
const TooltipInnerContent = react.forwardRef(
  function TooltipInnerContent2(props, ref) {
    const { contentProps } = tooltipContext.useTooltipContext();
    const mergedProps = react$1.mergeProps(contentProps, props);
    return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref });
  }
);

exports.TooltipContent = TooltipContent;
