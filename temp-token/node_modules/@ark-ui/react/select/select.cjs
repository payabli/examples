'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const selectContext = require('./select-context.cjs');
const useSelect = require('./use-select.cjs');

const SelectImpl = (props, ref) => {
  const [useSelectProps, { children, ...localProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "closeOnSelect",
      "defaultValue",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "highlightedValue",
      "id",
      "ids",
      "invalid",
      "isItemDisabled",
      "items",
      "itemToString",
      "itemToValue",
      "loop",
      "multiple",
      "name",
      "onChange",
      "onClose",
      "onFocusOutside",
      "onHighlight",
      "onInteractOutside",
      "onOpen",
      "onPointerDownOutside",
      "open",
      "positioning",
      "readOnly",
      "selectOnBlur",
      "value"
    ]
  );
  const api = useSelect.useSelect(useSelectProps);
  const view = runIfFn.runIfFn(children, api);
  const mergedProps = react$1.mergeProps(api.rootProps, localProps);
  return /* @__PURE__ */ jsxRuntime.jsx(selectContext.SelectProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
};
const Select = react.forwardRef(SelectImpl);

exports.Select = Select;
