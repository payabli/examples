import { type ReactNode } from 'react';
import { type HTMLArkProps } from '../factory';
import { type Assign, type CollectionItem } from '../types';
import { type UseSelectProps, type UseSelectReturn } from './use-select';
export type SelectProps<T extends CollectionItem> = Assign<HTMLArkProps<'div'>, UseSelectProps<T>> & {
    children?: ReactNode | ((state: UseSelectReturn<T>) => ReactNode);
};
export interface SelectComponent {
    <T extends CollectionItem>(props: SelectProps<T> & React.RefAttributes<HTMLDivElement>): JSX.Element;
}
export declare const Select: SelectComponent;
