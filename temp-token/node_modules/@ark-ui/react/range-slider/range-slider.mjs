'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { forwardRef } from 'react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { RangeSliderProvider } from './range-slider-context.mjs';
import { useRangeSlider } from './use-range-slider.mjs';

const RangeSlider = forwardRef((props, ref) => {
  const [useRangeSliderProps, { children, ...divProps }] = createSplitProps()(
    props,
    [
      "aria-label",
      "aria-labelledby",
      "defaultValue",
      "dir",
      "disabled",
      "form",
      "getAriaValueText",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "max",
      "min",
      "minStepsBetweenThumbs",
      "name",
      "onChange",
      "onChangeEnd",
      "onChangeStart",
      "onFocusChange",
      "orientation",
      "readOnly",
      "step",
      "thumbAlignment",
      "thumbAlignment",
      "thumbSize",
      "value"
    ]
  );
  const slider = useRangeSlider(useRangeSliderProps);
  const mergedProps = mergeProps(slider.rootProps, divProps);
  const view = runIfFn(children, slider);
  return /* @__PURE__ */ jsx(RangeSliderProvider, { value: slider, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});
RangeSlider.displayName = "RangeSlider";

export { RangeSlider };
