'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react$1 = require('@zag-js/react');
const react = require('react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const runIfFn = require('../run-if-fn.cjs');
const rangeSliderContext = require('./range-slider-context.cjs');
const useRangeSlider = require('./use-range-slider.cjs');

const RangeSlider = react.forwardRef((props, ref) => {
  const [useRangeSliderProps, { children, ...divProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "aria-label",
      "aria-labelledby",
      "defaultValue",
      "dir",
      "disabled",
      "form",
      "getAriaValueText",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "max",
      "min",
      "minStepsBetweenThumbs",
      "name",
      "onChange",
      "onChangeEnd",
      "onChangeStart",
      "onFocusChange",
      "orientation",
      "readOnly",
      "step",
      "thumbAlignment",
      "thumbAlignment",
      "thumbSize",
      "value"
    ]
  );
  const slider = useRangeSlider.useRangeSlider(useRangeSliderProps);
  const mergedProps = react$1.mergeProps(slider.rootProps, divProps);
  const view = runIfFn.runIfFn(children, slider);
  return /* @__PURE__ */ jsxRuntime.jsx(rangeSliderContext.RangeSliderProvider, { value: slider, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});
RangeSlider.displayName = "RangeSlider";

exports.RangeSlider = RangeSlider;
