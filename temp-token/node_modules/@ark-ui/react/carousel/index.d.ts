import { SlideIndicatorProps, SlideProps } from '@zag-js/carousel';
import { HTMLArkProps } from '..';
import { UseCarouselReturn, UseCarouselProps } from './use-carousel';
import { ForwardRefExoticComponent, DetailedHTMLProps, HTMLAttributes, ReactNode, RefAttributes, ButtonHTMLAttributes } from 'react';
/// <reference types="react" />
import { type CarouselProps } from './carousel';
import { useCarouselContext } from './carousel-context';
import { CarouselControl, type CarouselControlProps } from './carousel-control';
import { CarouselIndicator, type CarouselIndicatorProps } from './carousel-indicator';
import { CarouselIndicatorGroup, type CarouselIndicatorGroupProps } from './carousel-indicator-group';
import { CarouselNextSlideTrigger, type CarouselNextSlideTriggerProps } from './carousel-next-slide-trigger';
import { CarouselPrevSlideTrigger, type CarouselPrevSlideTriggerProps } from './carousel-prev-slide-trigger';
import { CarouselSlide, type CarouselSlideProps } from './carousel-slide';
import { CarouselSlideGroup, type CarouselSlideGroupProps } from './carousel-slide-group';
import { CarouselViewport, type CarouselViewportProps } from './carousel-viewport';
import { carouselAnatomy } from './carousel.anatomy';
declare const Carousel: ForwardRefExoticComponent<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    asChild?: boolean | undefined;
} & {
    children?: ReactNode | ((pages: UseCarouselReturn) => ReactNode);
}, keyof UseCarouselProps> & UseCarouselProps & RefAttributes<HTMLDivElement>> & {
    Root: ForwardRefExoticComponent<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & {
        children?: ReactNode | ((pages: UseCarouselReturn) => ReactNode);
    }, keyof UseCarouselProps> & UseCarouselProps & RefAttributes<HTMLDivElement>>;
    Control: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Indicator: ForwardRefExoticComponent<Omit<HTMLArkProps<"button">, keyof SlideIndicatorProps> & SlideIndicatorProps & RefAttributes<HTMLButtonElement>>;
    IndicatorGroup: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    NextSlideTrigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
    PrevSlideTrigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
    Slide: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "index"> & SlideProps & RefAttributes<HTMLDivElement>>;
    SlideGroup: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
    Viewport: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLDivElement>>;
};
export { Carousel, CarouselControl, CarouselIndicator, CarouselIndicatorGroup, CarouselNextSlideTrigger, CarouselPrevSlideTrigger, CarouselSlide, CarouselSlideGroup, CarouselViewport, carouselAnatomy, useCarouselContext, };
export type { CarouselControlProps, CarouselIndicatorGroupProps, CarouselIndicatorProps, CarouselNextSlideTriggerProps, CarouselPrevSlideTriggerProps, CarouselProps, CarouselSlideGroupProps, CarouselSlideProps, CarouselViewportProps, };
