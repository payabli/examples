'use client';
import { jsx } from 'react/jsx-runtime';
import { useMachine, normalizeProps } from '@zag-js/react';
import * as toast from '@zag-js/toast';
import { useId } from 'react';
import { createContext } from '../create-context.mjs';
import '../environment/index.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const [ToastContextProvider, useToast] = createContext();
const ToastProvider = (props) => {
  const { children, ...restProps } = props;
  const getRootNode = useEnvironmentContext();
  const context = { id: useId(), getRootNode, ...restProps };
  const [state, send] = useMachine(toast.group.machine(context));
  const api = toast.group.connect(state, send, normalizeProps);
  return /* @__PURE__ */ jsx(ToastContextProvider, { value: api, children });
};

export { ToastProvider, useToast };
