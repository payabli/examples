import { Placement, Service } from '@zag-js/toast';
import { JSX } from 'react/jsx-runtime';
import { UseToastItemProps } from './use-toast-item';
import { HTMLArkProps } from '..';
import { ForwardRefExoticComponent, RefAttributes, DetailedHTMLProps, HTMLAttributes, ButtonHTMLAttributes, ReactNode } from 'react';
/// <reference types="react" />
import { Toast as ToastRoot, type ToastProps } from './toast';
import { ToastCloseTrigger, type ToastCloseTriggerProps } from './toast-close-trigger';
import { ToastDescription, type ToastDescriptionProps } from './toast-description';
import { ToastGroup, type ToastGroupProps } from './toast-group';
import { useToastItemContext, type ToastItemContext } from './toast-item-context';
import { ToastPlacements, type ToastPlacementsProps } from './toast-placements';
import { ToastProvider, useToast, type ToastProviderProps } from './toast-provider';
import { ToastTitle, type ToastTitleProps } from './toast-title';
import { toastAnatomy } from './toast.anatomy';
declare const Toast: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "toast"> & UseToastItemProps & RefAttributes<HTMLDivElement>> & {
    Provider: (props: ToastProviderProps) => JSX.Element;
    Title: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLHeadingElement>>;
    Root: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "toast"> & UseToastItemProps & RefAttributes<HTMLDivElement>>;
    Description: ForwardRefExoticComponent<Omit<DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLParagraphElement>>;
    CloseTrigger: ForwardRefExoticComponent<Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
        asChild?: boolean | undefined;
    } & RefAttributes<HTMLButtonElement>>;
    Placements: (props: ToastPlacementsProps) => JSX.Element;
    Group: ForwardRefExoticComponent<Omit<HTMLArkProps<"div">, "children" | "placement"> & {
        placement: Placement;
        children?: ReactNode | ((toasts: Service[]) => ReactNode);
    } & RefAttributes<HTMLDivElement>>;
};
export { Toast, ToastCloseTrigger, ToastDescription, ToastGroup, ToastPlacements, ToastProvider, ToastRoot, ToastTitle, toastAnatomy, useToast, useToastItemContext, };
export type { ToastCloseTriggerProps, ToastDescriptionProps, ToastGroupProps, ToastItemContext, ToastPlacementsProps, ToastProps, ToastProviderProps, ToastTitleProps, };
