"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/logic.ts
var logic_exports = {};
__export(logic_exports, {
  match: () => match,
  orElse: () => orElse,
  otherwise: () => otherwise,
  when: () => when
});
module.exports = __toCommonJS(logic_exports);
var match = (...fns) => (v) => {
  for (let fn of fns) {
    let x = fn(v);
    if (x != null)
      return x;
  }
};
function when(predicate, fn) {
  return (v) => {
    if (predicate(v))
      return fn(v);
  };
}
var otherwise = (fn) => (v) => when(() => !0, fn)(v), orElse = (u) => (v) => (
  // @ts-ignore
  v ?? (typeof u == "function" ? u() : u)
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  match,
  orElse,
  otherwise,
  when
});
